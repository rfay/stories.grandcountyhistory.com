<?php

use Drupal\tag1quo\Adapter\Core\Core;
use Drupal\tag1quo\Adapter\Form\FormState;
use Drupal\tag1quo\Controller\AdminController;
use Drupal\tag1quo\Form\AdminSettingsForm;
use Drupal\tag1quo\Heartbeat;

/**
 * @file
 * Tag1 Quo module.
 */

/**
 * Retrieves the core version.
 *
 * @param bool $major_only
 *   Flag indicating whether to return just the major version.
 *
 * @return string|int
 *   The entire core version or just the major core version if $major_only
 *   was provided.
 */
function _tag1quo_drupal_version($major_only = FALSE) {
  static $version;
  if ($version === NULL) {
    $version = class_exists('Drupal') ? \Drupal::VERSION : (defined('VERSION') ? VERSION : '0.0.0');
  }
  return $major_only ? (int) $version[0] : $version;
}

/**
 * The registered callback for autoloading tag1quo classes.
 *
 * Note: this is only used as a last resort for installations less than
 * Drupal 8 where class autoloading is not built-in. This helps remove any
 * module dependencies.
 *
 * @param string $class
 *   The class to autoload.
 */
function _tag1quo_autoload($class) {
  $prefix = 'Drupal\\tag1quo\\';
  if (strpos($class, $prefix) === 0) {
    $filename = __DIR__ . '/src/' . str_replace('\\', '/', str_replace($prefix, '', $class)) . '.php';
    if (file_exists($filename)) {
      /** @noinspection PhpIncludeInspection */
      include_once $filename;
    }
  }
}

// Register the above autoloader, only if necessary.
if (_tag1quo_drupal_version(TRUE) < 8) {
  spl_autoload_register('_tag1quo_autoload');
}

/*****************************************************************************
 * Drupal 6 & 7 Hooks.
 *****************************************************************************/

/**
 * Retrieves the base admin path.
 *
 * @return string
 */
function _tag1quo_admin_path() {
  static $admin_path;
  if ($admin_path === NULL) {
    $admin_path = _tag1quo_drupal_version(TRUE) === 6 ? 'admin/settings' : 'admin/config/development';
  }
  return $admin_path;
}

/**
 * Settings form for module configuration.
 */
function tag1quo_admin_settings($form = array(), $form_state = array()) {
  $form = AdminSettingsForm::create()->build($form, FormState::create($form_state));
  return system_settings_form($form);
}

/**
 * Some very simplistic token validation.
 */
function tag1quo_admin_settings_validate(&$form, &$form_state) {
  AdminSettingsForm::create()->validate($form, FormState::create($form_state));
}

/**
 * Some very simplistic token submission.
 */
function tag1quo_admin_settings_submit(&$form, &$form_state) {
  AdminSettingsForm::create()->submit($form, FormState::create($form_state));
}

/**
 * Displays the information is sent to Tag1 Quo.
 */
function tag1quo_admin_review() {
  $build = AdminController::create()->review();
  return drupal_render($build);
}

/**
 * Manually send report to Tag1 Quo.
 */
function tag1quo_admin_send_manually() {
  AdminController::create()->sendManually();
}

/**
 * Current status of the information that's being provided to Tag1 Consulting.
 */
function tag1quo_admin_status() {
  $build = AdminController::create()->status();
  return drupal_render($build);
}

/**
 * Implements hook_cron().
 *
 * {@inheritdoc}
 */
function tag1quo_cron() {
  Heartbeat::create()->send();
}

/**
 * Implements hook_help().
 *
 * {@inheritdoc}
 */
function tag1quo_help($path, $arg) {
  if ($path === 'admin/help#tag1quo' || $path === 'help.page.tag1quo') {
    return Core::create()->help($path, $arg);
  }
}

/**
 * Implements hook_menu().
 *
 * {@inheritdoc}
 *
 * Note: this is for both Drupal 6 & Drupal 7.
 */
function tag1quo_menu() {
  $base_path = _tag1quo_admin_path();
  $items["$base_path/tag1quo"] = array(
    'title' => 'Tag1 Quo',
    'description' => 'Configure your website to talk to the Tag1 Quo service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tag1quo_admin_settings'),
    'access arguments' => array('administer tag1quo'),
    // Provide the Drupal 8 matching route identifier so URLs/paths can be
    // adjusted accordingly for Drupal 6 & 7.
    'route' => 'tag1quo.admin_settings',
  );
  $items["$base_path/tag1quo/configuration"] = array(
    'title' => 'Configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tag1quo_admin_settings'),
    'access arguments' => array('administer tag1quo'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items["$base_path/tag1quo/review"] = array(
    'title' => 'Review',
    'description' => 'Review the information this module is sending to Tag1 Quo.',
    'page callback' => 'tag1quo_admin_review',
    'access arguments' => array('administer tag1quo'),
    'type' => MENU_LOCAL_TASK,
    // Provide the Drupal 8 matching route identifier so URLs/paths can be
    // adjusted accordingly for Drupal 6 & 7.
    'route' => 'tag1quo.admin_review',
  );
  $items["$base_path/tag1quo/status"] = array(
    'title' => 'Status',
    'description' => 'Status of information being sent to Tag1 Quo.',
    'page callback' => 'tag1quo_admin_status',
    'access arguments' => array('administer tag1quo'),
    'type' => MENU_LOCAL_TASK,
    // Provide the Drupal 8 matching route identifier so URLs/paths can be
    // adjusted accordingly for Drupal 6 & 7.
    'route' => 'tag1quo.admin_status',
  );
  $items["$base_path/tag1quo/status/manual"] = array(
    'title' => 'Manually Send',
    'description' => 'Manually send report to Tag1 Quo.',
    'page callback' => 'tag1quo_admin_send_manually',
    'access arguments' => array('administer tag1quo'),
    'type' => MENU_CALLBACK,
    // Provide the Drupal 8 matching route identifier so URLs/paths can be
    // adjusted accordingly for Drupal 6 & 7.
    'route' => 'tag1quo.admin_send_manually',
  );
  return $items;
}

/**
 * Implements hook_perm().
 *
 * Note: this is for Drupal 6.
 *
 * {@inheritdoc}
 */
function tag1quo_perm() {
  return array('administer tag1quo');
}

/**
 * Implements hook_permission().
 *
 * Note: this is for Drupal 7.
 *
 * {@inheritdoc}
 */
function tag1quo_permission() {
  return array(
    'administer tag1quo' => array(
      'title' => t('Administer Tag1 Quo'),
      'description' => t('Provides access for configuring and managing Tag1 Quo on this website.'),
    ),
  );
}
